name: PyInstaller packaging example

# on: workflow_dispatch
on: push

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      ENV_NAME: packaging-env
      PYTHON: "3.10"
    defaults:
      run:
        # Adding -l {0} helps ensure conda can be found properly.
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        python-version: ${{ env.PYTHON }}
        environment-file: ${{ env.ENV_NAME }}.yml
        activate-environment: ${{ env.ENV_NAME }}
        conda-remove-defaults: true
    - name: Conda Info
      run: |
        conda info -a
        conda list
        PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
        if [[ $PYVER != ${{ env.PYTHON }} ]]; then
          exit 1;
        fi

    - name: Package
      run: |
        pyinstaller --clean --noconfirm main.$RUNNER_OS.spec

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-executable
        path: ./dist
