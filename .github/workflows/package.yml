name: PyInstaller packaging example

# on: workflow_dispatch
on: push

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      ENV_NAME: packaging-env
      PYTHON: 3.10
    defaults:
      run:
        # Adding -l {0} helps ensure conda can be found properly.
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        python-version: ${{ env.PYTHON }}
        environment-file: ${{ env.ENV_NAME }}.yml
        activate-environment: ${{ env.ENV_NAME }}
    - name: Conda Info
      run: |
        conda info -a
        conda list
        PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
        if [[ $PYVER != ${{ env.PYTHON }} ]]; then
          exit 1;
        fi

    - name: Package
      run: |
        pyinstaller main.spec

    # - name: Set up Python
    #   uses: actions/setup-python@v3
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install flake8
    #     if [ "$RUNNER_OS" == "Linux" ]; then
    #           # On Linux, we need to manually point pip to prebuilt wheel archive
    #           # as per https://extras.wxpython.org/wxPython4/extras/README.txt
    #           python -m pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-$(lsb_release -r -s) -r requirements.txt
    #     else
    #           python -m pip install -r requirements.txt;
    #     fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Create Executable
    #   uses: sayyid5416/pyinstaller@v1
    #   with:
    #     spec: 'main.spec'
    #     upload_exe_with_name: 'hello-world'
